# Generated by Django 5.2.3 on 2025-07-25 12:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('admin_name', models.CharField(max_length=100)),
                ('password_hash', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdminRole',
            fields=[
                ('role_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('access_pages', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('blog_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('blog_image', models.URLField()),
                ('schedule_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], max_length=20)),
                ('author_id', models.CharField(max_length=100)),
                ('author_type', models.CharField(choices=[('admin', 'Admin'), ('user', 'User')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('category_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CallbackRequest',
            fields=[
                ('callback_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('sender_id', models.CharField(max_length=100)),
                ('contact_info', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('hidden', 'Hidden'), ('visible', 'Visible')], max_length=20)),
                ('created_by', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeletedItemsCache',
            fields=[
                ('cache_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=100)),
                ('record_data', models.JSONField()),
                ('deleted_at', models.DateTimeField()),
                ('deleted_reason', models.TextField()),
                ('restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('image_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('url', models.URLField()),
                ('alt_text', models.CharField(max_length=255)),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
                ('tags', models.JSONField()),
                ('image_type', models.CharField(max_length=50)),
                ('linked_table', models.CharField(max_length=100)),
                ('linked_id', models.CharField(max_length=100)),
                ('linked_page', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('recipient_id', models.CharField(max_length=100)),
                ('recipient_type', models.CharField(choices=[('user', 'User'), ('admin', 'Admin')], max_length=10)),
                ('source_table', models.CharField(max_length=100)),
                ('source_id', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('unread', 'Unread'), ('read', 'Read')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('brand', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discounted_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_rate', models.FloatField()),
                ('price_calculator', models.TextField()),
                ('video_url', models.URLField(blank=True, null=True)),
                ('status', models.CharField(max_length=50)),
                ('created_by', models.CharField(max_length=100)),
                ('created_by_type', models.CharField(choices=[('admin', 'Admin'), ('user', 'User')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('setting_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('site_title', models.CharField(max_length=100)),
                ('logo_url', models.URLField()),
                ('language', models.CharField(max_length=20)),
                ('currency', models.CharField(max_length=10)),
                ('timezone', models.CharField(max_length=50)),
                ('tax_rate', models.FloatField()),
                ('payment_modes', models.JSONField()),
                ('shipping_zones', models.JSONField()),
                ('social_links', models.JSONField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('subcategory_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('hidden', 'Hidden'), ('visible', 'Visible')], max_length=20)),
                ('created_by', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password_hash', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminRoleMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.admin')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.adminrole')),
            ],
        ),
        migrations.CreateModel(
            name='BlogCategoryMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.blog')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.blogcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('cart_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DashboardSnapshot',
            fields=[
                ('dashboard_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('snapshot_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], max_length=50)),
                ('snapshot_date', models.DateField()),
                ('new_users', models.IntegerField()),
                ('orders_placed', models.IntegerField()),
                ('orders_cancelled', models.IntegerField()),
                ('orders_delivered', models.IntegerField()),
                ('total_revenue', models.DecimalField(decimal_places=2, max_digits=12)),
                ('active_users', models.IntegerField()),
                ('order_growth_rate', models.FloatField()),
                ('user_growth_rate', models.FloatField()),
                ('active_user_growth_rate', models.FloatField()),
                ('top_visited_pages', models.JSONField(default=list)),
                ('top_companies', models.JSONField(default=list)),
                ('countries_ordered_from', models.JSONField(default=list)),
                ('data_source', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.admin')),
            ],
        ),
        migrations.CreateModel(
            name='HeroBanner',
            fields=[
                ('hero_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('alt_text', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.category')),
            ],
        ),
        migrations.CreateModel(
            name='HeroBannerImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(choices=[('desktop', 'Desktop'), ('mobile', 'Mobile')], max_length=20)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('banner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='admin_backend_final.herobanner')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.image')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='admin_backend_final.category')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.image')),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('order_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('shipped', 'Shipped'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], max_length=50)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderDelivery',
            fields=[
                ('delivery_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('street_address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=20)),
                ('instructions', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.orders')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('item_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.orders')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.product')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('item_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField()),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.image')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='admin_backend_final.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductInventory',
            fields=[
                ('inventory_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('stock_quantity', models.IntegerField()),
                ('low_stock_alert', models.IntegerField()),
                ('stock_status', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSEO',
            fields=[
                ('seo_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('image_alt_text', models.CharField(max_length=255)),
                ('meta_title', models.CharField(max_length=255)),
                ('meta_description', models.TextField()),
                ('meta_keywords', models.JSONField()),
                ('open_graph_title', models.CharField(max_length=255)),
                ('open_graph_desc', models.TextField()),
                ('open_graph_image_url', models.URLField()),
                ('canonical_url', models.URLField()),
                ('json_ld', models.TextField()),
                ('slug', models.SlugField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('variant_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('size', models.CharField(max_length=50)),
                ('color', models.CharField(max_length=50)),
                ('material_type', models.CharField(max_length=50)),
                ('fabric_finish', models.CharField(max_length=50)),
                ('printing_methods', models.JSONField()),
                ('add_on_options', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.product')),
            ],
        ),
        migrations.CreateModel(
            name='ShippingInfo',
            fields=[
                ('shipping_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('shipping_class', models.CharField(max_length=100)),
                ('processing_time', models.CharField(max_length=100)),
                ('entered_by_id', models.CharField(max_length=100)),
                ('entered_by_type', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSubCategoryMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.product')),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.subcategory')),
            ],
        ),
        migrations.CreateModel(
            name='CategorySubCategoryMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.category')),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.subcategory')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategoryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.image')),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='admin_backend_final.subcategory')),
            ],
        ),
        migrations.CreateModel(
            name='VariantCombination',
            fields=[
                ('combo_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('price_override', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_backend_final.productvariant')),
            ],
        ),
    ]
